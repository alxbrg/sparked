version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8

jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      # download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # install dependencies
      - run:
          name: Installing dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # storing vars in a .bash_env file to persist them across jobs
      - run:
          name: Setting up persistent env
          command: |
            echo 'export PKG_VERSION=$(node -p "require('"'./package.json'"').version")' >> .bash_env
            echo 'export NPM_VERSION=$(npm view sparked version)' >> .bash_env

      - persist_to_workspace:
          root: ~/
          paths:
            - repo
            - .ssh

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      # run linter
      - run:
          name: Linting
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      # run tests
      - run:
          name: Running tests
          command: yarn test && yarn codecov

  version-check:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      # ensure that the package version has been incremented correctly
      - run:
          name: Verifying package version
          command: .circleci/version.sh

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/

      # re-check package version in case job was triggered independently
      - run:
          name: Verifying package version
          command: .circleci/version.sh

      # authenticate
      - run:
          name: Authenticating with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc

      # publish package
      - run:
          name: Publishing
          command: npm publish

      # tag using package version
      - run:
          name: Tagging
          command: |
            source .bash_env
            git tag "v$PKG_VERSION"
            git push --tags

workflows:
  version: 2
  test-and-publish:
    jobs:
      - build

      - lint:
          requires:
            - build

      - test:
          requires:
            - build

      - version-check:
          requires:
            - build
          filters:
            branches:
              only:
                - dev
                - master

      - publish:
          requires:
            - lint
            - test
            - version-check
          filters:
            branches:
              only: master
