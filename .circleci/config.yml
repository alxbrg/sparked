version: 2

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:8

jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      # download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # install dependencies
      - run:
          name: Installing dependencies
          command: yarn install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      - persist_to_workspace:
          root: ~/repo
          paths: .

  lint:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      # run linter
      - run:
          name: Linting
          command: yarn lint

  test:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      # run tests
      - run:
          name: Running tests
          command: yarn test && yarn codecov

      # ensure that the package version has been incremented
      - run:
          name: Checking package version
          command: |
            export LATEST_VERSION=$(npm view sparked version)
            export CURRENT_VERSION=$(node -p "require('./package.json').version")
            if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]
            then
              echo -e "Success!"
              exit 0
            else
              echo -e "Package version not updated."
              exit 1
            fi

  publish:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      # authenticate
      - run:
          name: Authenticating with registry
          command: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ~/repo/.npmrc

      # publish package
      - run:
          name: Publishing
          command: npm publish

      - run:
          name: Tagging
          command: |
            # NB: the test job ensures that the version has been incremented
            export CURRENT_VERSION=$(node -p "require('./package.json').version")
            git tag $CURRENT_VERSION && git push --tags

workflows:
  version: 2
  test-and-publish:
    jobs:
      - build
      - lint:
          requires:
            - build
      - test:
          requires:
            - build
      - publish:
          requires:
            - test
          filters:
            branches:
              only: master
